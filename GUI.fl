# data file for the Fltk User Interface Designer (fluid)
version 1.0308
header_name {.h}
code_name {.cxx}
decl {\#include "SpectreDrawer.h"} {public global
}

decl {\#include "GUI_event_handler.h"} {public global
}

Function {make_window()} {open
} {
  Fl_Window {} {
    label {LIQR - Layered I/Q Receiver} open
    xywh {1061 193 705 695} type Double color 47 labelsize 12 resizable visible
  } {
    Fl_Menu_Bar {} {
      label hfgdhf open
      xywh {0 0 970 20}
    } {
      Submenu {} {
        label {Файл} open
        xywh {0 0 62 20} labelsize 12
      } {
        MenuItem {} {
          label {Открыть I/Q файл (Ctrl-O)}
          xywh {0 0 30 20} labelsize 12
        }
        MenuItem {} {
          label {Записать I/Q (Ctrl-R)}
          xywh {0 0 30 20} labelsize 12
        }
      }
      MenuItem {} {
        label {О программе}
        xywh {0 0 30 20} labelsize 12
      }
    }
    Fl_Tabs {} {open
      xywh {5 535 490 155}
    } {
      Fl_Group {} {
        label {Параметры приёма} open
        xywh {10 555 485 105} labelsize 13 hide
      } {
        Fl_Value_Output tabs_center_freq_field {
          label {Центральная частота, кГц::}
          xywh {225 565 260 20} labelsize 12 textsize 12
        }
        Fl_Value_Input {} {
          label {Полоса пропускания, кГц:}
          callback {update_bandwidth_kHz(o->value())}
          xywh {225 615 260 20} labelsize 12 maximum 2000 value 2000 textsize 12
        }
        Fl_Value_Input tabs_sample_rate_field {
          label {Частота дискретизации, кГц:}
          xywh {225 590 260 20} labelsize 12 maximum 2000 value 2400 textsize 12
        }
        Fl_Input {} {
          label {Файл для записи:}
          xywh {225 640 260 20} labelsize 12 textsize 12 deactivate
        }
      }
      Fl_Group {} {
        label {Об SDR} open
        xywh {10 555 485 135} labelsize 12 hide
      } {
        Fl_Output sdr_device_name_field {
          label {Название устройства:}
          xywh {225 565 260 20} labelsize 12 textsize 12
        }
        Fl_Output tuner_name_field {
          label {Тип тюнера:}
          xywh {225 590 260 20} labelsize 12 textsize 12
        }
        Fl_Value_Output tuner_gain_field {
          label {Усиление тюнера, дБ:}
          xywh {225 615 260 20} labelsize 12 textsize 12
        }
        Fl_Check_Button {} {
          label {Автоконтроль усиления}
          callback {gui_set_autogain(o->value());}
          xywh {225 640 15 15} down_box DOWN_BOX labelsize 12 align 4
        }
      }
      Fl_Group {} {
        label {Сканирующий приём} open
        xywh {5 555 490 130} labelsize 13
      } {
        Fl_Value_Input freq_hop_step_field {
          label {Шаг перестройки, кГц:}
          callback {update_bandwidth_kHz(o->value())}
          xywh {225 585 260 20} labelsize 12 maximum 2000 value 1000 textsize 12 deactivate
        }
        Fl_Value_Input hop_steps_field {
          label {Шагов перестройки:}
          callback {hop_bandwidth_field->value((o->value() + 1) * 1000);
gui_set_hops_number(o->value());}
          xywh {225 610 260 20} labelsize 12 minimum 1 maximum 2000 value 9 textsize 12 deactivate
        }
        Fl_Value_Input hop_bandwidth_field {
          label {Ширина полосы сканирования, кГц:}
          callback {hop_steps_field->value(o->value() / 1000 - 1)}
          xywh {225 635 260 20} labelsize 12 minimum 2000 maximum 200000 value 20000 textsize 12 deactivate
        }
        Fl_Value_Input hop_period_field {
          label {Период перестройки, мс:}
          callback {gui_set_hopping_period(o->value());}
          xywh {225 660 260 20} labelsize 12 minimum 2000 maximum 200000 value 100 textsize 12 deactivate
        }
        Fl_Check_Button {} {
          label {Сканировать диапазон}
          callback {//freq_hop_step_field->active() ? freq_hop_step_field->deactivate() : freq_hop_step_field->activate();
hop_steps_field->active() ? hop_steps_field->deactivate() : hop_steps_field->activate();
hop_bandwidth_field->active() ? hop_bandwidth_field->deactivate() : hop_bandwidth_field->activate();
hop_period_field->active() ? hop_period_field->deactivate() : hop_period_field->activate();}
          xywh {225 565 15 15} down_box DOWN_BOX labelsize 12 align 4
        }
      }
    }
    Fl_Tabs {} {open
      xywh {5 30 690 440}
    } {
      Fl_Box spectre_box {
        label {СПЕКТР}
        xywh {5 50 690 420} box BORDER_BOX color 24 labelsize 10 labelcolor 54 resizable hotspot
        class SpectreDrawer
      }
    }
    Fl_Group {} {open selected
      xywh {5 470 685 65} resizable
    } {
      Fl_Light_Button {} {
        label {ЗАПИСЬ I/Q (0 MB)}
        xywh {180 475 110 20} selection_color 89 labelsize 10 deactivate
      }
      Fl_Button {} {
        label {ПУСК}
        callback {gui_start_spectre();}
        tooltip start xywh {60 475 60 20} labelsize 10
      }
      Fl_Button {} {
        label {СТОП}
        callback {gui_stop_spectre();}
        xywh {120 475 60 20} labelsize 10
      }
      Fl_Light_Button {} {
        label {АУДИО}
        xywh {5 475 55 20} selection_color 2 labelsize 10 deactivate
      }
      Fl_Value_Input center_freq_field {
        callback {update_center_freq_kHz(o->value());}
        xywh {180 500 110 20} labeltype NO_LABEL labelsize 11 value 100000 textsize 12
      }
      Fl_Counter center_freq_toggle {
        label {Центральная частота, кГц}
        callback {update_center_freq_kHz(o->value());}
        xywh {5 500 170 20} labelsize 12 minimum 0 maximum 1.8e+06 step 0 value 100000 textsize 12
        code0 {o->step(100);}
        code1 {o->lstep(1000);}
      }
      Fl_Group {} {open
        xywh {295 475 395 45} resizable
      } {}
    }
  }
}

Function {update_center_freq_kHz(int freq)} {return_type void
} {
  code {center_freq_field->value(freq);
center_freq_toggle->value(freq);
tabs_center_freq_field->value(freq);} {}
  code {gui_set_device_frequency(freq * 1000);} {}
}

Function {update_bandwidth_kHz(int freq)} {} {
  code {gui_set_bandwidth(freq * 1000);} {}
}
